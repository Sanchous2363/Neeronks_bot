from telebot import TeleBot
from telebot.types import ReplyKeyboardMarkup
from config import TOKEN, MAX_TOKENS
from GPT import GPT_message_generate, addition_GPT, stop, users_history
bot = TeleBot(TOKEN)
MAX_LETTERS = MAX_TOKENS
users_history = {}
smiles = "üêçüìµü§ñüëæüëΩüëªüßû‚Äç‚ôÇÔ∏è‚Ñ¢üö©"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –Ω—É–∂–Ω—ã–º–∏ –∫–Ω–æ–ø–æ—á–∫–∞–º–∏
def create_keyboard(buttons_list):
    keyboard = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True, one_time_keyboard=True)
    keyboard.add(*buttons_list)
    return keyboard


# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ /start
@bot.message_handler(commands=['start'])
def start(message):
    user_name = message.from_user.first_name
    bot.send_message(message.chat.id,
                     text=f"–ü—Ä–∏–≤–µ—Ç, {user_name}! –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∫–æ–¥–∞ –Ω–∞ Python!üêçüìµ\n"
                          f"–¢—ã –º–æ–∂–µ—à—å –ø—Ä–∏—Å–ª–∞—Ç—å —É—Å–ª–æ–≤–∏–µ  –∞ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–∏–ø–∏—Å–∞—Ç—å —Ç–µ–±–µ –∫–æ–¥)ü§ñüëæ.\n"
                          "–ò–Ω–æ–≥–¥–∞ –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—É—á–∞—é—Ç—Å—è —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–º–∏ - –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.",
                     reply_markup=create_keyboard(["/solve_task", '/help', '/addition', '/stop']))


# –ö–æ–º–∞–Ω–¥–∞ /help
@bot.message_handler(commands=['help'])
def support(message):
    bot.send_message(message.from_user.id,
                     text="–ß—Ç–æ–±—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —Ä–µ—à–µ–Ω–∏—é –∑–∞–¥–∞—á–∏: –Ω–∞–∂–º–∏ /solve_task, –∞ –∑–∞—Ç–µ–º –Ω–∞–ø–∏—à–∏ —É—Å–ª–æ–≤–∏–µ –∑–∞–¥–∞—á–∏",
                     reply_markup=create_keyboard(["/solve_task"]))

@bot.message_handler(commands=['solve_task'])
def get_promt_and_work(message):
    bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏ —É—Å–ª–æ–≤–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏:")
    user_id = message.from_user.id
    if message.content_type != "text":
        bot.send_message(user_id, "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–º–µ–Ω–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        bot.register_next_step_handler(message, get_promt_and_work)
        return
    if len(message.text) > MAX_LETTERS:
        bot.send_message(user_id, "–ó–∞–ø—Ä–æ—Å –ø—Ä–µ–≤—ã—à–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤\n–ò—Å–ø—Ä–∞–≤—å –∑–∞–ø—Ä–æ—Å")
        bot.register_next_step_handler(message, message.text)
        return
    if user_id not in users_history or users_history[user_id] == {}:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–º—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–∞—á–∞–ª–æ –æ—Ç–≤–µ—Ç–∞ GPT –≤ —Å–ª–æ–≤–∞—Ä–∏–∫ users_history
        users_history[user_id] = {
            'system_content': "–¢—ã - —Ä—É—Å—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–∏—à–µ—Ç –ø–æ—è—Å–Ω–µ–Ω–∏—è –∫ –∫–æ–¥—É –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –∞ —Å–∞–º –∫–æ–¥ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º, –Ω–∞ —è–∑—ã–∫–µ Python",
            "user_content": message.text,
            "assistant_content": ""
        }
        bot.register_next_step_handler(message, GPT_message_generate)
    else:
        bot.register_next_step_handler(message, GPT_message_generate)

@bot.message_handler(commands=['addition', "additio"])
def addition_prompt(message):
    bot.send_message(message.chat.id, "P.s. –ï—Å–ª–∏ —á—Ç–æ, —è –º–æ–≥—É –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–¥–∞—á–∏! –ê —Ç–æ—á–Ω–µ–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –ø–æ—è–≤–∏—Ç—Å—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, —è –∞–∫—Ç–∏–≤–Ω–æ –Ω–∞–¥ –Ω–∏–º —Ä–∞–±–æ—Ç–∞—é)")
    bot.register_next_step_handler(message, addition_GPT)

@bot.message_handler(commands=["stop_gnenerate"])
def stop_generate(message):
    if users_history[message.from_user.id]["assistant_content"] != "":
        bot.send_message(message.chat.id, "–í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç–µ—Ä—Ç—ã). –ù–æ –Ω–µ –≤–æ–ª–Ω—É–π—Å—è –Ω–∞ –º–æ—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω–æ—Å—Ç—å —ç—Ç–æ –Ω–∏–∫–∞–∫ –Ω–µ –ø–æ–≤–ª–∏—è–µ—Ç!")
        bot.register_next_step_handler(message, stop)
    else:
        bot.send_message(message.chat.id, "–ß—Ç–æ–±—ã –¥–æ–ø–æ–ª–Ω–∏—Ç—å, –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º—Ç, –ø–æ–¥—Ä–æ–±–Ω–µ–µ –≤ /help")


bot.polling()






